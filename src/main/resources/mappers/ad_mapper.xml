<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ad">

    <select id="selectAdRequestList" parameterType="com.dchans.api.admin.dto.ad.AdDto$AdRequestDto" resultType="com.dchans.api.admin.dto.ad.AdDto$AdResponseDto">
        select s.seq, s.store_code, b.store_name, s.category_type, s.status,
            group_concat(
                case c.category_code
                when '0' then '신점'
                when '1' then '철학관'
                when '2' then '타로'
                when '3' then '굿당'
                when '4' then '기도터'
                else '사찰'
                end
                order by c.category_code
                separator ', '
            ) as categoryName,
            to_char(s.created_at,'YYYY-MM-DD') as createdAt
        from ad s inner join store b on s.store_code = b.store_code
        cross join (
            select '0' as category_code union all
            select '1' union all select '2' union all
            select '3' union all select '4' union all select '5'
        ) c
        where s.status = 0
        and find_in_set(c.category_code, s.category_type) > 0
        group by s.store_code, b.store_name, s.category_type, s.status, s.created_at
        order by s.created_at desc
        limit #{pageSize} offset #{offset}
    </select>

    <select id="selectAdRequestCount" parameterType="com.dchans.api.admin.dto.ad.AdDto$AdRequestDto" resultType="int">
        select count(*) from ad s inner join store b on s.store_code = b.store_code
        where s.status = 0
    </select>

    <update id="updateAdRequest" parameterType="com.dchans.api.admin.dto.ad.AdDto$AdUpdateDto">
        update ad set status = #{status}
        where seq = #{seq}
    </update>


    <select id="selectAdRegistList" parameterType="com.dchans.api.admin.dto.ad.AdDto$AdRequestDto" resultType="com.dchans.api.admin.dto.ad.AdDto$AdResponseDto">
        select s.seq, s.store_code, b.store_name, s.category_type, s.status, concat(s.start_date, '~', s.end_date) as period, ranking,
               group_concat(
                       case c.category_code
                           when '0' then '신점'
                           when '1' then '철학관'
                           when '2' then '타로'
                           when '3' then '굿당'
                           when '4' then '기도터'
                           else '사찰'
                           end
                           order by c.category_code
                separator ', '
               ) as categoryName,
               to_char(s.created_at,'YYYY-MM-DD') as createdAt
        from ad s inner join store b on s.store_code = b.store_code
        cross join (
            select '0' as category_code union all
            select '1' union all select '2' union all
            select '3' union all select '4' union all select '5'
        ) c
        where s.status = 1
          and find_in_set(c.category_code, s.category_type) > 0
        group by s.store_code, b.store_name, s.category_type, s.status, s.created_at, period, ranking
        order by s.created_at desc
            limit #{pageSize} offset #{offset}
    </select>

    <select id="selectAdRegistCount" parameterType="com.dchans.api.admin.dto.ad.AdDto$AdRequestDto" resultType="int">
        select count(*) from ad s inner join store b on s.store_code = b.store_code
        where s.status = 1
    </select>



    <select id="selectAdRequestDetail" parameterType="com.dchans.api.admin.dto.ad.AdDto$AdRequestDto" resultType="com.dchans.api.admin.dto.ad.AdDto$AdResponseDto">
        select
            s.store_code,
            b.store_name,
            s.category_type,
            s.status,
            s.start_date,
            s.end_date,
            s.ranking
        from ad s inner join store b on s.store_code = b.store_code
        where s.seq = #{seq}
    </select>

    <select id="selectStoreList" resultType="com.dchans.api.admin.dto.ad.AdDto$AdResponseDto">
        select
            store_code,
            store_name
        from store
        where status = 0
    </select>



    <insert id="upsertAdRequest" parameterType="com.dchans.api.admin.dto.ad.AdDto$AdCreateDto" >
        insert into store (
            store_name,
            store_code,
            category_type,
            ceo_name,
            phone,
            email,
            zip_code,
            address,
            address_detail,
            description,
            memo,
            start_time,
            end_time,
            status
        )values(
            #{storeName},
        <choose>
            <when test="storeCode != null and storeCode != ''">
                #{storeCode}
            </when>
            <otherwise>
                concat('ST_',date_format(current_timestamp, '%Y%m%d'),lpad((select coalesce(max(seq), 0) + 1 from store), 4, '0'))
            </otherwise>
        </choose>,
            #{categoryType},
            #{ceoName},
            #{phone},
            #{email},
            #{zipCode},
            #{address},
            #{addressDetail},
            #{description},
            #{memo},
            #{startTime},
            #{endTime},
            #{status}
        )
        on duplicate key update
            store_name = #{storeName},
            category_type = #{categoryType},
            ceo_name = #{ceoName},
            phone = #{phone},
            email = #{email},
            zip_code = #{zipCode},
            address = #{address},
            address_detail = #{addressDetail},
            description = #{description},
            memo = #{memo},
            start_time = #{startTime},
            end_time = #{endTime},
            status = #{status}
    </insert>

    <delete id="deleteAdRequest">
        delete from ad
        where 1 = 1
        and seq in
        <foreach collection="seqList" item="seq" open="(" close=")" separator=",">
            #{seq}
        </foreach>
    </delete>
</mapper>